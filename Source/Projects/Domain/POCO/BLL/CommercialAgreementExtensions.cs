
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DemonstratorApp.DAL;

namespace DemonstratorApp.BO
{
	/// <summary>
	/// The CommercialAgreement extensions
	/// </summary>
	public static class CommercialAgreementExtensions
	{
        public static System.Collections.Generic.List<DemonstratorApp.BO.ImportedBuyer> FindSupplierBuyers(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("CommercialAgreement", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "FindSupplierBuyers")) {
string supUsername = "";
System.Collections.Generic.List<DemonstratorApp.BO.CommercialAgreement> supplierAgreements = new DemonstratorApp.DAL.Repository().Get<DemonstratorApp.BO.CommercialAgreement>((a) => a.Supplier.UserName == zAppDev.DotNet.Framework.Identity.IdentityHelper.GetCurrentApplicationUser().UserName);
System.Collections.Generic.List<DemonstratorApp.BO.ImportedBuyer> foundBuyers = new System.Collections.Generic.List<DemonstratorApp.BO.ImportedBuyer>();
foreach (var supAgreement in supplierAgreements ?? Enumerable.Empty<DemonstratorApp.BO.CommercialAgreement>()) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "CommercialAgreement",  DemonstratorApp.Hubs.EventsHub.RaiseDebugMessage, "buyer: " + (supAgreement?.ImportedBuyer?.Code ?? "") + "c.a. " + (supAgreement?.Id?.ToString() ?? ""));
foundBuyers?.Add(supAgreement?.ImportedBuyer);
}
return foundBuyers?.Distinct().ToList();
}
}



        
	}
}
