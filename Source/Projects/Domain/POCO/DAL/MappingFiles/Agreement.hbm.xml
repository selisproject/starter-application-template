<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DemonstratorApp.Backend" namespace="DemonstratorApp.BO">
    <class name="Agreement" table="`Agreements`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">Agreements</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="StartDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`StartDate`" sql-type="datetime" />
        </property>
        <property name="EndDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`EndDate`" sql-type="datetime" />
        </property>
        <property name="FundedRate" column="`FundedRate`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="8" scale="2" />
        <property name="FundedAmount" column="`FundedAmount`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="8" scale="2" />
        <property name="CurrentAgreementStatus" column="`CurrentAgreementStatus`" type="String" not-null="false" length="100" />
        <property name="InterestRate" column="`InterestRate`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="8" scale="2" />
        <many-to-one name="Investor" access="field.camelcase" class="Investor" column="`Investor`" cascade="persist,merge,save-update" foreign-key="FK_Agreements_To_Investors_On_Investor" />
        <many-to-one name="Supplier" access="field.camelcase" class="Supplier" column="`Supplier`" cascade="persist,merge,save-update" foreign-key="FK_Agreements_To_Suppliers_On_Supplier" />
        <bag batch-size="100" name="FundedTransactions" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreement_FundedTransactions`" foreign-key="FK_Agreements_To_FundedTransactions_On_FundedTransactions" />
            <one-to-many class="FundedTransaction" />
        </bag>
        <bag batch-size="100" name="AgreementStatus" access="field.camelcase" cascade="persist,merge,save-update" order-by="`ProvidedBy`">
            <cache usage="read-write" />
            <key column="`Agreement_AgreementStatus`" foreign-key="FK_Agreements_To_AgreementStatuses_On_AgreementStatus" />
            <one-to-many class="AgreementStatus" />
        </bag>
        <one-to-one name="DocumentAgreement" access="field.camelcase" class="DocumentAgreement" property-ref="Agreement" cascade="persist,merge,save-update" />
        <bag batch-size="100" name="CommercialAgreements" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreement`" foreign-key="FK_Agreements_To_CommercialAgreements_On_CommercialAgreements" />
            <one-to-many class="CommercialAgreement" />
        </bag>
    </class>
</hibernate-mapping>