<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DemonstratorApp.Backend" namespace="DemonstratorApp.BO">
    <class name="Order" table="`Orders`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">Orders</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="OrderNumber" column="`OrderNumber`" type="String" not-null="false" length="100" />
        <property name="EstimatedDateOfDelivery" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`EstimatedDateOfDelivery`" sql-type="datetime" />
        </property>
        <property name="PaymentTerms" column="`PaymentTerms`" type="String" not-null="false" length="100" />
        <property name="IntermediateParty" column="`IntermediateParty`" type="System.Boolean" not-null="false" />
        <property name="IsCancelled" column="`IsCancelled`" type="System.Boolean" not-null="false" />
        <property name="DateOfOrder" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`DateOfOrder`" sql-type="datetime" />
        </property>
        <property name="OrderAmount" column="`OrderAmount`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="TotalPrice" column="`TotalPrice`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="From" column="`From`" type="String" not-null="false" length="100" />
        <property name="DeliveryTo" column="`DeliveryTo`" type="String" not-null="false" length="100" />
        <property name="OrderAttachment" column="`OrderAttachment`" type="String" not-null="false" length="100" />
        <property name="Status" column="`Status`" type="" not-null="false" />
        <many-to-one name="CommercialAgreement" access="field.camelcase" class="CommercialAgreement" column="`CommercialAgreement`" cascade="persist,merge,save-update" foreign-key="FK_Orders_To_CommercialAgreements_On_CommercialAgreement" />
        <bag batch-size="100" name="OrderProducts" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Order`" foreign-key="FK_Orders_To_OrderProducts_On_OrderProducts" />
            <one-to-many class="OrderProduct" />
        </bag>
        <bag batch-size="100" name="ProofOfDeliveries" table="`ProofOfDeliveries_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_ProofOfDeliveries_On_ProofOfDeliveries" />
            <many-to-many class="ProofOfDelivery" column="`ProofOfDeliveries`" />
        </bag>
        <bag batch-size="100" name="Invoices" table="`Invoices_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_Invoices_On_Invoices" />
            <many-to-many class="Invoice" column="`Invoices`" />
        </bag>
        <bag batch-size="100" name="DeliveryNotes" table="`DeliveryNotes_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_DeliveryNotes_On_DeliveryNotes" />
            <many-to-many class="DeliveryNote" column="`DeliveryNotes`" />
        </bag>
        <many-to-one name="OrderStatus" access="field.camelcase" class="OrderStatus" column="`OrderStatus`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Orders_To_OrderStatuses_On_OrderStatus" />
        <many-to-one name="FinalAcceptanceCertificate" access="field.camelcase" class="FinalAcceptanceCertificate" column="`FinalAcceptanceCertificate`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Orders_To_FinalAcceptanceCertificates_On_FinalAcceptanceCertificate" />
        <bag batch-size="100" name="CreditNotes" table="`CreditNotes_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_CreditNotes_On_CreditNotes" />
            <many-to-many class="CreditNote" column="`CreditNotes`" />
        </bag>
        <bag batch-size="100" name="OrderPayment" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Order`" foreign-key="FK_Orders_To_OrderPayments_On_OrderPayment" />
            <one-to-many class="OrderPayment" />
        </bag>
        <bag batch-size="100" name="LetterOfCredits" table="`LetterOfCredits_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_LetterOfCredits_On_LetterOfCredits" />
            <many-to-many class="LetterOfCredit" column="`LetterOfCredits`" />
        </bag>
        <bag batch-size="100" name="BillOfLandings" table="`BillOfLandings_To_Orders`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_BillOfLandings_On_BillOfLandings" />
            <many-to-many class="BillOfLanding" column="`BillOfLandings`" />
        </bag>
        <bag batch-size="100" name="Intermediaries" table="`Orders_To_Intermediaries`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Orders`" foreign-key="FK_Orders_To_Intermediaries_On_Intermediaries" />
            <many-to-many class="Intermediary" column="`Intermediaries`" />
        </bag>
        <many-to-one name="Transaction" access="field.camelcase" class="Transaction" column="`Transaction`" cascade="persist,merge,save-update" foreign-key="FK_Orders_To_Transactions_On_Transaction" />
    </class>
</hibernate-mapping>