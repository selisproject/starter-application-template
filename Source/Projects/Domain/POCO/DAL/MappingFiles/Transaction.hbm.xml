<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DemonstratorApp.Backend" namespace="DemonstratorApp.BO">
    <class name="Transaction" table="`Transactions`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">Transactions</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="TransactionDateOccured" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`TransactionDateOccured`" sql-type="datetime" />
        </property>
        <property name="TransactionValue" column="`TransactionValue`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="FundedAmount" column="`FundedAmount`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="ToBePaidAmount" column="`ToBePaidAmount`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="InvoicedDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`InvoicedDate`" sql-type="datetime" />
        </property>
        <property name="PaymentStatus" column="`PaymentStatus`" type="String" not-null="false" length="100" />
        <property name="PaymentDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`PaymentDate`" sql-type="datetime" />
        </property>
        <property name="RestPaymentAmount" column="`RestPaymentAmount`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="19" scale="5" />
        <property name="PaidByBuyer" column="`PaidByBuyer`" type="System.Boolean" not-null="false" />
        <many-to-one name="CommercialAgreement" access="field.camelcase" class="CommercialAgreement" column="`CommercialAgreement`" cascade="persist,merge,save-update" foreign-key="FK_Transactions_To_CommercialAgreements_On_CommercialAgreement" />
        <bag batch-size="100" name="Orders" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_Orders_On_Orders" />
            <one-to-many class="Order" />
        </bag>
        <bag batch-size="100" name="CreditNotes" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_CreditNotes_On_CreditNotes" />
            <one-to-many class="CreditNote" />
        </bag>
        <bag batch-size="100" name="DeliveryNotes" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_DeliveryNotes_On_DeliveryNotes" />
            <one-to-many class="DeliveryNote" />
        </bag>
        <bag batch-size="100" name="Invoices" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_Invoices_On_Invoices" />
            <one-to-many class="Invoice" />
        </bag>
        <bag batch-size="100" name="ProofOfDeliveries" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_ProofOfDeliveries_On_ProofOfDeliveries" />
            <one-to-many class="ProofOfDelivery" />
        </bag>
        <many-to-one name="TransactionStatus" access="field.camelcase" class="TransactionStatus" column="`TransactionStatus`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Transactions_To_TransactionStatuses_On_TransactionStatus" />
        <many-to-one name="Supplier" access="field.camelcase" class="Supplier" column="`Supplier`" cascade="persist,merge,save-update" foreign-key="FK_Transactions_To_Suppliers_On_Supplier" />
        <many-to-one name="ImportedBuyer" access="field.camelcase" class="ImportedBuyer" column="`ImportedBuyer`" cascade="persist,merge,save-update" foreign-key="FK_Transactions_To_ImportedBuyers_On_ImportedBuyer" />
        <bag batch-size="100" name="LetterOfCredits" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_LetterOfCredits_On_LetterOfCredits" />
            <one-to-many class="LetterOfCredit" />
        </bag>
        <bag batch-size="100" name="Intermediaries" table="`Intermediaries_To_Transactions`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transactions`" foreign-key="FK_Transactions_To_Intermediaries_On_Intermediaries" />
            <many-to-many class="Intermediary" column="`Intermediaries`" />
        </bag>
        <bag batch-size="100" name="PartialProofOfDeliveries" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_PartialProofOfDeliveries_On_PartialProofOfDeliveries" />
            <one-to-many class="PartialProofOfDelivery" />
        </bag>
        <bag batch-size="100" name="CustomsClearingDocumentations" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_CustomsClearingDocumentations_On_CustomsClearingDocumentations" />
            <one-to-many class="CustomsClearingDocumentation" />
        </bag>
        <bag batch-size="100" name="BillOfLandings" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Transaction`" foreign-key="FK_Transactions_To_BillOfLandings_On_BillOfLandings" />
            <one-to-many class="BillOfLanding" />
        </bag>
        <many-to-one name="TransactionOverview" access="field.camelcase" class="TransactionOverview" column="`TransactionOverview`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Transactions_To_TransactionOverviews_On_TransactionOverview" />
    </class>
</hibernate-mapping>