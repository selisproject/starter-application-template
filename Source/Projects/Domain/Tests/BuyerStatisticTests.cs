// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DemonstratorApp.BO;
using DemonstratorApp.BoTesting.Tests.Common;
using DemonstratorApp.DAL;

namespace DemonstratorApp.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for BuyerStatisticTest and is intended
    ///to contain all BuyerStatisticTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("BuyerStatistic Repository Tests")]
    [Category("BuyerStatistic Repository Tests")]
    internal class BuyerStatisticTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `BuyerStatistic`")]
        [Order(0)]
        public void BuyerStatistic_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var _dashboard_buyer_buyerstatistics = new DemonstratorApp.BO.Buyer
            {
                BuyerId = 6043,
                PrimaryPhone = "Buyer_PrimaryPhone",
                SecondaryPhone = "Buyer_SecondaryPhone",
                Fax = "Buyer_Fax",
                WebSite = "Buyer_WebSite",
                Company = "Buyer_Company",
                AnnualTurnOver = 2222222222.22222M,
                LegalRepresentative = "Buyer_LegalRepresentative",
                Rating = "Buyer_Rating",
                CreditInsurance = true,
                Logo = "Buyer_Logo",
                AddressOne = "Buyer_AddressOne",
                AddressTwo = "Buyer_AddressTwo",
                VatNumber = "Buyer_VatNumber",
                ContactPerson = "Buyer_ContactPerson",
                Prefix = "Buyer_Prefix",
                Temp = "Buyer_Temp",
                UserName = "7e3a4321-68bd-4a82-8190-cc2666cf49abBuyer_UserName",
                PasswordHash = "Buyer_PasswordHash",
                SecurityStamp = "Buyer_SecurityStamp",
                EmailConfirmed = true,
                LockoutEnabled = true,
                PhoneNumberConfirmed = true,
                TwoFactorEnabled = true,
                AccessFailedCount = 2282,
                Name = "Buyer_Name",
                Email = "Buyer_Email",
                PhoneNumber = "Buyer_PhoneNumber",
                LockoutEndDate = now,
            };
            new PersistenceSpecification<DemonstratorApp.BO.BuyerStatistic>(Session)
            .CheckReference(p => p.Buyer, _dashboard_buyer_buyerstatistics)
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `BuyerStatistic`")]
        [Order(1)]
        public void BuyerStatistic_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<DemonstratorApp.BO.BuyerStatistic> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<DemonstratorApp.BO.BuyerStatistic>(
                              a => true
                              && a.Buyer != null
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}