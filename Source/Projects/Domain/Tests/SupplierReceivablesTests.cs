// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DemonstratorApp.BO;
using DemonstratorApp.BoTesting.Tests.Common;
using DemonstratorApp.DAL;

namespace DemonstratorApp.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for SupplierReceivablesTest and is intended
    ///to contain all SupplierReceivablesTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("SupplierReceivables Repository Tests")]
    [Category("SupplierReceivables Repository Tests")]
    internal class SupplierReceivablesTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `SupplierReceivables`")]
        [Order(0)]
        public void SupplierReceivables_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            new PersistenceSpecification<DemonstratorApp.BO.SupplierReceivables>(Session)
            .CheckProperty(p => p.DomesticCustomersPresent, 2222222222.22222M)
            .CheckProperty(p => p.DomesticCustomersPrior, 2222222222.22222M)
            .CheckProperty(p => p.EUCustomersPresent, 2222222222.22222M)
            .CheckProperty(p => p.EUCustomersPrior, 2222222222.22222M)
            .CheckProperty(p => p.ThirdCountryCustomersPresent, 2222222222.22222M)
            .CheckProperty(p => p.ThirdCountryCustomersPrior, 2222222222.22222M)
            .CheckProperty(p => p.WillUploadFiles, true)
            .CheckProperty(p => p.TotalPrior, 2222222222.22222M)
            .CheckProperty(p => p.TotalPresent, 2222222222.22222M)
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `SupplierReceivables`")]
        [Order(1)]
        public void SupplierReceivables_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<DemonstratorApp.BO.SupplierReceivables> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<DemonstratorApp.BO.SupplierReceivables>(
                              a => true
                              && (a.DomesticCustomersPresent + 123 > 0)
                              && (a.DomesticCustomersPrior + 123 > 0)
                              && (a.EUCustomersPresent + 123 > 0)
                              && (a.EUCustomersPrior + 123 > 0)
                              && (a.ThirdCountryCustomersPresent + 123 > 0)
                              && (a.ThirdCountryCustomersPrior + 123 > 0)
                              && !a.WillUploadFiles
                              && (a.TotalPrior + 123 > 0)
                              && (a.TotalPresent + 123 > 0)
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}